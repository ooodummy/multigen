#ifndef MULTIGEN_PROCESSORS_DEFAULT_PROCESSOR_HPP
#define MULTIGEN_PROCESSORS_DEFAULT_PROCESSOR_HPP

#include "base_processor.hpp"

#include "inspector/metadata_container.hpp"

#include <filesystem>
#include <fstream>

namespace multigen {
    class default_processor : public base_processor {
    public:
        bool initialize(const std::vector<std::shared_ptr<metadata_container>>& metadata_containers) override {
            metadata_containers_ = metadata_containers;
            return true;
        }

        bool serialize(const std::shared_ptr<base_serializer>& serializer) override {
            auto& writer = serialized_data_;

            writer << "// Generated by MultiGen https://github.com/ooodummy/multigen\n";

            for (auto& metadata_container : metadata_containers_) {
                if (!serializer->serialize(writer, metadata_container))
                    return false;
            }

            return true;
        }

        bool write(const std::filesystem::path output_directory) override {
            std::ofstream file(output_directory / "dump.txt");
            if (!file.is_open())
                return false;

            file << serialized_data_.str();

            if (file.fail())
                return false;

            return true;
        }

    private:
        std::vector<std::shared_ptr<metadata_container>> metadata_containers_;
        std::stringstream serialized_data_;
    };
}

#endif